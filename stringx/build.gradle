//buildscript {
//    repositories {
//        jcenter()
//        mavenCentral()
//    }
//
//    dependencies {
//        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
//        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
//    }
//}
//apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'
//
//ext {
//    bintrayRepo = 'stringx'
//    bintrayName = 'sdk'
//
//    publishedGroupId = 'io.stringx'
//    libraryName = 'StringX-SDK'
//    artifact = 'sdk'
//
//    libraryDescription = 'Automatic app Translation for Android'
//
//    siteUrl = 'https://www.stringx.io'
//    gitUrl = 'https://github.com/SzyQ/stringx-android-sdk'
//
//    developerId = 'klimaszewski'
//    developerName = 'Szymon Klimaszewski'
//    developerEmail = 'klimaszewski.szymon@gmail.com'
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//    versionMajor = 0
//    versionMinor = 1
//    versionHotFix = 0
//
//    libraryVersion = buildVersionName()
//}
//
//android {
//    compileSdkVersion 27
//    buildToolsVersion "26.0.2"
//    defaultConfig {
//        minSdkVersion 16
//        targetSdkVersion 27
//        versionCode buildVersionCode()
//        versionName buildVersionName()
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//    }
//
//}
//
//dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:support-annotations:27.0.0'
//}
//
//def buildVersionName() {
//    String versionName
//    if (versionHotFix == null || versionHotFix == 0) {
//        versionName = versionMajor + "." + versionMinor
//    } else {
//        versionName = versionMajor + "." + versionMinor + "." + versionHotFix
//    }
//    println "Version name: " + versionName
//    return versionName
//}
//
//def buildVersionCode() {
//    Integer versionCode
//    if (versionHotFix == null || versionHotFix == 0) {
//        versionCode = versionMajor * 10000 + versionMinor * 100
//    } else {
//        versionCode = versionMajor * 10000 + versionMinor * 100 + versionHotFix
//    }
//    println "Version code: " + versionCode
//    return versionCode
//}
//
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.android.library'

ext {
    bintrayRepo = 'stringx'
    bintrayName = 'stringx-android-sdk'

    publishedGroupId = 'io.stringx'
    libraryName = 'StringX-SDK'
    artifact = 'stringx-android-sdk'
    publishedArtifactId = 'stringx-android-sdk'

    libraryDescription = 'Automatic app Translation for Android'

    siteUrl = 'https://www.stringx.io'
    gitUrl = 'https://github.com/SzyQ/stringx-android-sdk.git'

    developerId = 'klimaszewski'
    developerName = 'Szymon Klimaszewski'
    developerEmail = 'klimaszewski.szymon@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ['Apache-2.0']
    versionMajor = 0
    versionMinor = 1
    versionHotFix = 4

    libraryVersion = buildVersionName()
}


android {
    compileSdkVersion 27
    buildToolsVersion "26.0.2"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode buildVersionCode()
        versionName buildVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:support-annotations:27.0.0'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            name 'StringX Android SDK'
            description "Automatic app translation SDK"
            url siteUrl
            inceptionYear '2017'

            packaging 'aar'
            groupId 'io.stringx'
            artifactId 'sdk'
            version libraryVersion

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            scm {
                connection gitUrl
                url 'https://github.com/SzyQ/stringx-android-sdk'

            }
            developers {
                developer {
                    id = developerId
                    name developerName
                }
            }
        }
    }
}

Properties bintrayProperties = new Properties()
bintrayProperties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = bintrayProperties.getProperty('bintray.user')
    key = bintrayProperties.get('bintray.apikey')
    configurations = ['archives']
    pkg {
        repo = 'stringx'
        name = 'sdk'
        userOrg = 'klimaszewski'
        licenses = allLicenses
        vcsUrl = gitUrl
        publish = true
        version {
            name = libraryVersion
            desc = libraryName
            released = new Date()
            vcsTag = libraryVersion
        }
    }
}
//
//bintray {
//    Properties properties = new Properties()
//    properties.load(project.rootProject.file('local.properties').newDataInputStream())
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
////    pkg {
////        repo = bintrayRepo
////        name = bintrayName
////        licenses = allLicenses
////        vcsUrl = gitUrl
////        version {
////            name = libraryVersion
////            desc = libraryDescription
////            released  = new Date()
////            vcsTag = libraryVersion
////        }
////    }
//    publications = ['MyPublication']
//}
//
//publishing {
//    publications {
//        MyPublication(MavenPublication) {
//            from components.java
//            groupId publishedGroupId
//            artifactId publishedArtifactId
//            version libraryVersion
//        }
//    }
//}



def buildVersionName() {
    String versionName
    if (versionHotFix == null || versionHotFix == 0) {
        versionName = versionMajor + "." + versionMinor
    } else {
        versionName = versionMajor + "." + versionMinor + "." + versionHotFix
    }
    println "Version name: " + versionName
    return versionName
}

def buildVersionCode() {
    Integer versionCode
    if (versionHotFix == null || versionHotFix == 0) {
        versionCode = versionMajor * 10000 + versionMinor * 100
    } else {
        versionCode = versionMajor * 10000 + versionMinor * 100 + versionHotFix
    }
    println "Version code: " + versionCode
    return versionCode
}
//
////apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
////apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'